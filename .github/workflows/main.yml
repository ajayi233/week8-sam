name: SAM Deploy Node.js
on:
  push:
    branches:
      - main
      - dev
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ['dev', 'prod']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Install SAM CLI
        run: pip install aws-sam-cli
      - name: Generate package-lock.json
        run: |
          cd src
          npm install --package-lock-only
      - name: Install Node.js dependencies
        run: |
          cd src
          npm install
          npm install aws-sdk
      - name: Build SAM application
        run: sam build --template-file template.json
      - name: Create Deployment S3 Bucket if not exists
        run: |
          aws s3api head-bucket --bucket "cf-templates-sam-eu-west-1" || \
          aws s3 mb s3://cf-templates-sam-eu-west-1 --region eu-west-1
      - name: Deploy SAM application
        run: |
          # Check if the stack exists and handle UPDATE_ROLLBACK_FAILED state
          if aws cloudformation describe-stacks --stack-name s3-sns-notifier-${{ matrix.environment }} --region eu-west-1 >/dev/null 2>&1; then
            STATUS=$(aws cloudformation describe-stacks --stack-name s3-sns-notifier-${{ matrix.environment }} --region eu-west-1 --query "Stacks[0].StackStatus" --output text)
            if [ "$STATUS" = "UPDATE_ROLLBACK_FAILED" ]; then
              echo "Stack is in UPDATE_ROLLBACK_FAILED state. Continuing rollback."
              aws cloudformation continue-update-rollback --stack-name s3-sns-notifier-${{ matrix.environment }} --region eu-west-1
              aws cloudformation wait stack-rollback-complete --stack-name s3-sns-notifier-${{ matrix.environment }} --region eu-west-1
            fi
          fi

          sam deploy \
            --template-file .aws-sam/build/template.yaml \
            --stack-name s3-sns-notifier-${{ matrix.environment }} \
            --s3-bucket cf-templates-sam-eu-west-1 \
            --s3-prefix sam-artifacts \
            --region eu-west-1 \
            --parameter-overrides \
              EnvironmentName=${{ matrix.environment }} \
              NotificationEmail=${{ secrets.NOTIFICATION_EMAIL }} \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset